---
- name: Install RPM packages
  dnf:
    name:
      - poetry
      - python3-pip
      - tox
      - krb5-devel
      - libpq-devel
      - gcc
      - sqlite3
      - git
      - vim
    state: present

- name: install python deps with poetry
  shell: poetry install
  become: true
  become_user: vagrant
  args:
    chdir: /home/vagrant/webhook-to-fedora-messaging

# Add Tinystage's root CA to the CA bundle
- name: Get the content of the CA cert
  slurp:
    src: /etc/ipa/ca.crt
  register: ca_crt
- name: Find where certifi's CA bundle is located
  command:
    cmd: poetry run python -c "import certifi; print(certifi.where())"
    chdir: /home/vagrant/webhook-to-fedora-messaging/
  become: true
  become_user: vagrant
  register: _ca_bundle_path
  changed_when: False
- name: Put tinystage root CA in the list of CAs
  blockinfile:
    block: "{{ ca_crt.content | b64decode }}"
    path: "/etc/pki/tls/certs/ca-bundle.crt"
- name: Put tinystage root CA in the list of CA's for certifi
  blockinfile:
    block: "{{ ca_crt.content | b64decode }}"
    path: "{{ _ca_bundle_path.stdout }}"
  become: true
  become_user: vagrant

# Authentication
- name: get the OIDC config
  ansible.builtin.slurp:
    src: /home/vagrant/frontend_oidc.json
  register: oidc_config

- name: extract the OIDC client_id
  set_fact:
    oidc_client_id: "{{ oidc_config['content'] | b64decode | from_json | json_query('web.client_id') }}"

- name: copy the config file
  template:
    src: w2fm.cfg
    dest: /home/vagrant/w2fm.cfg
    mode: 0644
    owner: vagrant
    group: vagrant

- name: copy the logging config file
  copy:
    remote_src: true
    src: /home/vagrant/webhook-to-fedora-messaging/logging.yaml.example
    dest: /home/vagrant/logging.yaml
    mode: 0644
    owner: vagrant
    group: vagrant

- name: Create or update the database
  command: poetry run w2fm setup
  environment:
    W2FM_CONFIG: /home/vagrant/w2fm.cfg
  become: yes
  become_user: vagrant
  args:
    chdir: /home/vagrant/webhook-to-fedora-messaging
    creates: /home/vagrant/w2fm.db

- name: setup the bash config dir
  file:
    path: /home/vagrant/.bashrc.d
    state: directory

- name: setup the environment variable
  copy:
    src: bashrc
    dest: /home/vagrant/.bashrc.d/w2fm

- name: Install the systemd unit files
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system/{{ item }}
    mode: 0644
  loop:
    - w2fm.service

- name: Enable and start services using systemd
  systemd:
    name: "{{ item }}"
    daemon_reload: yes
    enabled: yes
    state: started
  loop:
    - w2fm.service
